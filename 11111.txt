In the next.js program, I use the following file to show a single post:

// pages/[post-slug].js
import { useRouter } from 'next/router';
import { usePostBySlug } from '../api/usePosts';

export default function Post() {
    const router = useRouter();
    const { post, isLoading, isError } = usePostBySlug(router.query.postSlug);

    if (isLoading) {
        return <div>Loading...</div>;
    }

    if (isError) {
        return <div>Error loading post</div>;
    }

    if (!post) {
        return <div>Post not found</div>;
    }

    return (
        <div>
            <h1>{post.title.rendered}</h1>
            <div dangerouslySetInnerHTML={{ __html: post.content.rendered }} />
        </div>
    );
}

// api/usePosts.js
import useSWR from 'swr';

const fetcher = (url) => fetch(url).then((res) => res.json());
const API_URL = process.env.NEXT_PUBLIC_API_URL;

// Function to fetch post titles
export function usePosts() {
    const apiUrl = `${API_URL}/posts?per_page=20`;
    const {data, error} = useSWR(apiUrl, fetcher);
    return {
        posts: data,
        isLoading: !error && !data,
        isError: error,
    };
}

// Function to fetch a single post by its slug
export function usePostBySlug(slug) {
    const apiUrl = `${API_URL}/posts?slug=${slug}`;
    console.log(apiUrl);
    const {data, error} = useSWR(apiUrl, fetcher);

    return {
        post: data && data[0], // Assuming the slug is unique, so we take the first post found
        isLoading: !error && !data,
        isError: error,
    };
}



But when I click on the post title, the individual post is not shown and I get the message Post
not found. Where is the error in my code?

This is consule.log in the pages/[post-slug].js file:
const router = useRouter();
     console.log("router=", router)

Report:
router= ServerRouter {
   route: '/[post-slug]',
   pathname: '/[post-slug]',
   query: {},
   asPath: '/[post-slug]',
   isFallback: false,
   basePath: '',
   locale: undefined,
   locales: undefined,
   defaultLocale: undefined,
   isReady: false,
   domainLocales: undefined,
   isPreview: false,
   isLocaleDomain: false
}
